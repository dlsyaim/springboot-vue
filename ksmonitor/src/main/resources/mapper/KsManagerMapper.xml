<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks.monitor.dao.KsManagerDao">
    <!-- KsManager的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_KsManager_Map" type="ks.monitor.entity.KsManager">
        <id column="ManagerID" property="managerID" />
        <result column="QQ" property="qQ" />
        <result column="Status" property="status" />
        <result column="LoginTime" property="loginTime" />
        <result column="ManagerName" property="managerName" />
        <result column="Idcard" property="idcard" />
        <result column="UserEmail" property="userEmail" />
        <result column="AddTime" property="addTime" />
        <result column="RoleID" property="roleID" />
        <result column="WebSiteID" property="webSiteID" />
        <result column="MobilePhone" property="mobilePhone" />
        <result column="AddUser" property="addUser" />
        <result column="LoginIP" property="loginIP" />
        <result column="LoginNum" property="loginNum" />
        <result column="RealName" property="realName" />
        <result column="Password" property="password" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} 
                <if test="req.value != null"> #{req.value}</if> 
                <if test="req.values != null">
                    <foreach collection="req.values" item="val" separator=","> 
                        #{val} 
                    </foreach> 
                </if> 
                <if test="req.suffix != null"> ${req.suffix}</if> 
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:KS_Manager的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="KS_Manager_Column">
        KS_Manager.ManagerID as ManagerID
        ,KS_Manager.QQ as QQ
        ,KS_Manager.Status as Status
        ,KS_Manager.LoginTime as LoginTime
        ,KS_Manager.ManagerName as ManagerName
        ,KS_Manager.Idcard as Idcard
        ,KS_Manager.UserEmail as UserEmail
        ,KS_Manager.AddTime as AddTime
        ,KS_Manager.RoleID as RoleID
        ,KS_Manager.WebSiteID as WebSiteID
        ,KS_Manager.MobilePhone as MobilePhone
        ,KS_Manager.AddUser as AddUser
        ,KS_Manager.LoginIP as LoginIP
        ,KS_Manager.LoginNum as LoginNum
        ,KS_Manager.RealName as RealName
        ,KS_Manager.Password as Password
    </sql>

    <!--获得类名为:KsManager对应的数据库表的数据总行数 -->
    <select id="getKsManagerRowCount" parameterType="ks.monitor.common.Assist" resultType="java.lang.Long">
        select count(ManagerID) from KS_Manager
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:KsManager对应数据库中表的数据集合 -->
    <select id="selectKsManager" parameterType="ks.monitor.common.Assist" resultMap="result_KsManager_Map">
        select * from
        (
            select <if test="distinct !=null">${distinct}</if> ROW_NUMBER() over(<choose><when test="order!=null">${order}</when><otherwise>order by KS_Manager.ManagerID</otherwise></choose>) as page,
            <choose>
                <when test="resultColumn!=null">${resultColumn}</when>
                <otherwise>
            <include refid="KS_Manager_Column" /> 
                </otherwise>
            </choose>
            from KS_Manager

            <if test="require!=null"><include refid="Assist" /></if>
            <if test="order !=null">${order}</if>
        ) result 
        <choose>
            <when test="startRow!=null">where page &gt; #{startRow} <if test="rowSize!=null">and page &lt;= <if test="startRow!=null">#{startRow}+</if>#{rowSize} </if></when>
            <otherwise><if test="rowSize!=null">where page &lt;= #{rowSize}</if></otherwise>
        </choose>
    </select> 

    <!-- 获得一个KsManager对象,以参数KsManager对象中不为空的属性作为条件进行查询-->
    <select id="selectKsManagerByObj" parameterType="ks.monitor.entity.KsManager" resultMap="result_KsManager_Map">
        select 
            <include refid="KS_Manager_Column" /> 
        from KS_Manager
        <where>
            <if test="password != null "> and KS_Manager.Password = #{password}</if>
            <if test="realName != null "> and KS_Manager.RealName = #{realName}</if>
            <if test="loginNum != null "> and KS_Manager.LoginNum = #{loginNum}</if>
            <if test="loginIP != null "> and KS_Manager.LoginIP = #{loginIP}</if>
            <if test="addUser != null "> and KS_Manager.AddUser = #{addUser}</if>
            <if test="mobilePhone != null "> and KS_Manager.MobilePhone = #{mobilePhone}</if>
            <if test="webSiteID != null "> and KS_Manager.WebSiteID = #{webSiteID}</if>
            <if test="roleID != null "> and KS_Manager.RoleID = #{roleID}</if>
            <if test="addTime != null "> and KS_Manager.AddTime = #{addTime}</if>
            <if test="userEmail != null "> and KS_Manager.UserEmail = #{userEmail}</if>
            <if test="idcard != null "> and KS_Manager.Idcard = #{idcard}</if>
            <if test="managerName != null "> and KS_Manager.ManagerName = #{managerName}</if>
            <if test="loginTime != null "> and KS_Manager.LoginTime = #{loginTime}</if>
            <if test="status != null "> and KS_Manager.Status = #{status}</if>
            <if test="qQ != null "> and KS_Manager.QQ = #{qQ}</if>
            <if test="managerID != null "> and KS_Manager.ManagerID = #{managerID}</if>
        </where>
    </select> 

    <!-- 通过KsManager的id获得对应数据库中表的数据对象-->
    <select id="selectKsManagerById" parameterType="java.lang.Object" resultMap="result_KsManager_Map">
        select 
            <include refid="KS_Manager_Column" /> 
        from KS_Manager
        where KS_Manager.ManagerID = #{id}
    </select> 

    <!-- 将KsManager插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertKsManager" parameterType="ks.monitor.entity.KsManager">
        insert into KS_Manager(ManagerID,QQ,Status,LoginTime,ManagerName,Idcard,UserEmail,AddTime,RoleID,WebSiteID,MobilePhone,AddUser,LoginIP,LoginNum,RealName,Password) 
        values(#{managerID},#{qQ},#{status},#{loginTime},#{managerName},#{idcard},#{userEmail},#{addTime},#{roleID},#{webSiteID},#{mobilePhone},#{addUser},#{loginIP},#{loginNum},#{realName},#{password})
    </insert>

    <!-- 将KsManager中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyKsManager" parameterType="ks.monitor.entity.KsManager">
        insert into KS_Manager
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="managerID != null">ManagerID,</if>
            <if test="qQ != null">QQ,</if>
            <if test="status != null">Status,</if>
            <if test="loginTime != null">LoginTime,</if>
            <if test="managerName != null">ManagerName,</if>
            <if test="idcard != null">Idcard,</if>
            <if test="userEmail != null">UserEmail,</if>
            <if test="addTime != null">AddTime,</if>
            <if test="roleID != null">RoleID,</if>
            <if test="webSiteID != null">WebSiteID,</if>
            <if test="mobilePhone != null">MobilePhone,</if>
            <if test="addUser != null">AddUser,</if>
            <if test="loginIP != null">LoginIP,</if>
            <if test="loginNum != null">LoginNum,</if>
            <if test="realName != null">RealName,</if>
            <if test="password != null">Password,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="managerID != null"> #{managerID},</if>
            <if test="qQ != null"> #{qQ},</if>
            <if test="status != null"> #{status},</if>
            <if test="loginTime != null"> #{loginTime},</if>
            <if test="managerName != null"> #{managerName},</if>
            <if test="idcard != null"> #{idcard},</if>
            <if test="userEmail != null"> #{userEmail},</if>
            <if test="addTime != null"> #{addTime},</if>
            <if test="roleID != null"> #{roleID},</if>
            <if test="webSiteID != null"> #{webSiteID},</if>
            <if test="mobilePhone != null"> #{mobilePhone},</if>
            <if test="addUser != null"> #{addUser},</if>
            <if test="loginIP != null"> #{loginIP},</if>
            <if test="loginNum != null"> #{loginNum},</if>
            <if test="realName != null"> #{realName},</if>
            <if test="password != null"> #{password},</if>
        </trim>
    </insert>

    <!-- 将KsManager批量插入到对应数据库的表中-->
    <insert id="insertKsManagerByBatch" parameterType="ArrayList">
        insert into KS_Manager(ManagerID,QQ,Status,LoginTime,ManagerName,Idcard,UserEmail,AddTime,RoleID,WebSiteID,MobilePhone,AddUser,LoginIP,LoginNum,RealName,Password) 
        <foreach collection="list" item="item" index="index" separator=" union all " >
            select #{item.managerID},#{item.qQ},#{item.status},#{item.loginTime},#{item.managerName},#{item.idcard},#{item.userEmail},#{item.addTime},#{item.roleID},#{item.webSiteID},#{item.mobilePhone},#{item.addUser},#{item.loginIP},#{item.loginNum},#{item.realName},#{item.password}
        </foreach>
    </insert>

    <!-- 通过KsManager的id将数据库表中对应的数据删除-->
    <delete id="deleteKsManagerById" parameterType="java.lang.Object">
        delete from KS_Manager
        where ManagerID = #{id}
    </delete>

    <!-- 通过辅助工具Assist中的条件将KsManager对应的数据库表的数据删除-->
    <delete id="deleteKsManager" parameterType="ks.monitor.common.Assist">
        delete from KS_Manager
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

    <!-- 通过KsManager的id将KsManager的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateKsManagerById" parameterType="ks.monitor.entity.KsManager">
        update KS_Manager set
            QQ=#{qQ}
            ,Status=#{status}
            ,LoginTime=#{loginTime}
            ,ManagerName=#{managerName}
            ,Idcard=#{idcard}
            ,UserEmail=#{userEmail}
            ,AddTime=#{addTime}
            ,RoleID=#{roleID}
            ,WebSiteID=#{webSiteID}
            ,MobilePhone=#{mobilePhone}
            ,AddUser=#{addUser}
            ,LoginIP=#{loginIP}
            ,LoginNum=#{loginNum}
            ,RealName=#{realName}
            ,Password=#{password}
        where ManagerID=#{managerID}
    </update>

    <!-- 通过KsManager的id将KsManager中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyKsManagerById" parameterType="ks.monitor.entity.KsManager">
        update KS_Manager
        <set>
            <if test="qQ != null">
                QQ=#{qQ},
            </if>
            <if test="status != null">
                Status=#{status},
            </if>
            <if test="loginTime != null">
                LoginTime=#{loginTime},
            </if>
            <if test="managerName != null">
                ManagerName=#{managerName},
            </if>
            <if test="idcard != null">
                Idcard=#{idcard},
            </if>
            <if test="userEmail != null">
                UserEmail=#{userEmail},
            </if>
            <if test="addTime != null">
                AddTime=#{addTime},
            </if>
            <if test="roleID != null">
                RoleID=#{roleID},
            </if>
            <if test="webSiteID != null">
                WebSiteID=#{webSiteID},
            </if>
            <if test="mobilePhone != null">
                MobilePhone=#{mobilePhone},
            </if>
            <if test="addUser != null">
                AddUser=#{addUser},
            </if>
            <if test="loginIP != null">
                LoginIP=#{loginIP},
            </if>
            <if test="loginNum != null">
                LoginNum=#{loginNum},
            </if>
            <if test="realName != null">
                RealName=#{realName},
            </if>
            <if test="password != null">
                Password=#{password},
            </if>
        </set>
        where ManagerID=#{managerID}
    </update>

    <!-- 通过辅助工具Assist中的条件将KsManager中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateKsManager" parameterType="map">
        update KS_Manager
        <set>
                ManagerID=#{enti.managerID},
                QQ=#{enti.qQ},
                Status=#{enti.status},
                LoginTime=#{enti.loginTime},
                ManagerName=#{enti.managerName},
                Idcard=#{enti.idcard},
                UserEmail=#{enti.userEmail},
                AddTime=#{enti.addTime},
                RoleID=#{enti.roleID},
                WebSiteID=#{enti.webSiteID},
                MobilePhone=#{enti.mobilePhone},
                AddUser=#{enti.addUser},
                LoginIP=#{enti.loginIP},
                LoginNum=#{enti.loginNum},
                RealName=#{enti.realName},
                Password=#{enti.password},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将KsManager中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyKsManager" parameterType="map">
        update KS_Manager
        <set>
            <if test="enti.managerID != null">
                ManagerID=#{enti.managerID},
            </if>
            <if test="enti.qQ != null">
                QQ=#{enti.qQ},
            </if>
            <if test="enti.status != null">
                Status=#{enti.status},
            </if>
            <if test="enti.loginTime != null">
                LoginTime=#{enti.loginTime},
            </if>
            <if test="enti.managerName != null">
                ManagerName=#{enti.managerName},
            </if>
            <if test="enti.idcard != null">
                Idcard=#{enti.idcard},
            </if>
            <if test="enti.userEmail != null">
                UserEmail=#{enti.userEmail},
            </if>
            <if test="enti.addTime != null">
                AddTime=#{enti.addTime},
            </if>
            <if test="enti.roleID != null">
                RoleID=#{enti.roleID},
            </if>
            <if test="enti.webSiteID != null">
                WebSiteID=#{enti.webSiteID},
            </if>
            <if test="enti.mobilePhone != null">
                MobilePhone=#{enti.mobilePhone},
            </if>
            <if test="enti.addUser != null">
                AddUser=#{enti.addUser},
            </if>
            <if test="enti.loginIP != null">
                LoginIP=#{enti.loginIP},
            </if>
            <if test="enti.loginNum != null">
                LoginNum=#{enti.loginNum},
            </if>
            <if test="enti.realName != null">
                RealName=#{enti.realName},
            </if>
            <if test="enti.password != null">
                Password=#{enti.password},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <sql id="Base_Column">
       [ManagerID]
      ,[ManagerName]
      ,[Password]
      ,[MobilePhone]
      ,[QQ]
      ,[UserEmail]
      ,[Idcard]
      ,[RealName]
      ,[LoginIP]
      ,[LoginTime]
      ,[LoginNum]
      ,[RoleID]
      ,[WebSiteID]
      ,[AddTime]
    </sql>

    <select id="queryList" resultMap="baseResultMap" >
        SELECT <include refid="Base_Column"/>  FROM  user
    </select>
</mapper>